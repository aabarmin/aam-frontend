name: Release and deploy

on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'Version to deploy'
        required: true
        default: '0.0.0'
      BRANCH:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      database:
        image: mariadb:11.6
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_USER: mariadb
          MARIADB_PASSWORD: mariadb
          MARIADB_DATABASE: aml
        ports:
          - 3306:3306
      mail:
        image: rnwood/smtp4dev
        ports:
          - 5000:80
          - 2525:25

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.BRANCH }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Rename the artifact
        run: |
          rm -rf build/libs/*-plain.jar
          mv build/libs/*.jar build/libs/app.jar

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./build/libs/app.jar

  deploy:
    runs-on: ubuntu-latest
    name: "Deploy the artifact"
    environment: Production
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: .

      - name: Check if the version already exists
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            if [ -d "/home/${{ secrets.SERVER_USERNAME }}/app/${{ github.event.inputs.VERSION }}" ]; then exit 1; fi

      - name: Upload to the server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "./app.jar"
          target: /home/${{ secrets.SERVER_USERNAME }}/app/${{ github.event.inputs.VERSION }}

      - name: Stop the existing app
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            APP_PID=$(jps | grep app.jar | grep -Eo '[0-9]+')
            if [ -n "$APP_PID" ]; then kill -9 $APP_PID; fi

      - name: Run the new version
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/${{ secrets.SERVER_USERNAME }}/app/
            rm app.jar
            ln -fs /home/${{ secrets.SERVER_USERNAME }}/app/${{ github.event.inputs.VERSION }}/app.jar app.jar
            nohup ./run.sh
